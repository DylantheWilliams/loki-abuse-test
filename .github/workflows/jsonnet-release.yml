"jobs":
  "loki-image":
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "pull loki code"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "prepare-release-please"
        "repository": "grafana/loki"
    - "name": "Set up QEMU"
      "uses": "docker/setup-qemu-action@v3"
      "with":
        "go-version-file": "go.mod"
    - "name": "set up docker buildx"
      "uses": "docker/setup-buildx-action@v3"
    - "id": "parse-metadata"
      "name": "parse image metadata"
      "run": |
        mkdir -p dist
        
        platform="$(echo "${{ matrix.platform}}" |  sed  "s/\(.*\)\/\(.*\)/\1-\2/")"
        echo "platform=${platform}" >> $GITHUB_OUTPUT
        
        version=$(jq -r '."cmd/loki"' .release-please-manifest.json)
        echo "version=${version}" >> $GITHUB_OUTPUT
      "shell": "bash"
    - "name": "Build and export"
      "uses": "docker/build-push-action@v5"
      "with":
        "context": "."
        "file": "cmd/loki/Dockerfile"
        "outputs": "type=docker,dest=dist/loki-${{ steps.parse-metadata.outputs.version}}-${{ steps.parse-metadata.outputs.platform }}.tar"
        "platforms": "${{ matrix.platform }}"
        "tags": "grafana/loki:${{ steps.parse-metadata.outputs.version }}"
    - "name": "upload artifacts"
      "uses": "actions/upload-artifact@v3"
      "with":
        "name": "loki-image-${{ matrix.platform }}"
        "path": "dist/loki-${{ steps.parse-metadata.outputs.version}}-${{ steps.parse-metadata.outputs.platform }}.tar"
    "strategy":
      "fail-fast": true
      "matrix":
        "platform":
        - "linux/amd64"
        - "linux/arm64"
        - "linux/arm"
  "promtail-image":
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "pull loki code"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "prepare-release-please"
        "repository": "grafana/loki"
    - "name": "Set up QEMU"
      "uses": "docker/setup-qemu-action@v3"
      "with":
        "go-version-file": "go.mod"
    - "name": "set up docker buildx"
      "uses": "docker/setup-buildx-action@v3"
    - "id": "parse-metadata"
      "name": "parse image metadata"
      "run": |
        mkdir -p dist
        
        platform="$(echo "${{ matrix.platform}}" |  sed  "s/\(.*\)\/\(.*\)/\1-\2/")"
        echo "platform=${platform}" >> $GITHUB_OUTPUT
        
        version=$(jq -r '."cmd/promtail"' .release-please-manifest.json)
        echo "version=${version}" >> $GITHUB_OUTPUT
      "shell": "bash"
    - "name": "Build and export"
      "uses": "docker/build-push-action@v5"
      "with":
        "context": "."
        "file": "cmd/promtail/Dockerfile"
        "outputs": "type=docker,dest=dist/promtail-${{ steps.parse-metadata.outputs.version}}-${{ steps.parse-metadata.outputs.platform }}.tar"
        "platforms": "${{ matrix.platform }}"
        "tags": "grafana/promtail:${{ steps.parse-metadata.outputs.version }}"
    - "name": "upload artifacts"
      "uses": "actions/upload-artifact@v3"
      "with":
        "name": "promtail-image-${{ matrix.platform }}"
        "path": "dist/promtail-${{ steps.parse-metadata.outputs.version}}-${{ steps.parse-metadata.outputs.platform }}.tar"
    "strategy":
      "fail-fast": true
      "matrix":
        "platform":
        - "linux/amd64"
        - "linux/arm64"
        - "linux/arm"
"name": "release (jsonnet version)"
"on":
  "push":
    "branches":
    - "main"
    - "release-[0-9].[0-9].x"
    - "k[0-9]*"
  "workflow_dispatch": {}
